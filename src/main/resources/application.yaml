debug: false
management:
  endpoints:
    web:
      exposure:
        include: "*" # actuator 의 엔드 포인트 중에 감춰있는 항목 활성화
logging:
  level:
    com.example.demo: debug
    org.springframework.web.servlet: debug
    # 실제 쿼리에 어떤 파라마미터가 들어갔는지 보이도록 설정
    org.hibernate.type.descriptor.sql.BasicBinder: trace

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/board
    username: sdb
    password: qwe123!@#
    driver-class-name: com.mysql.cj.jdbc.Driver
  #    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
  #    username: sa
  #    driver-class-name: org.h2.Driver
  #    generate-unique-name: false

  h2:
    console:
      enabled: false # in-memory 방식을 사용하는 경우 H2 콘솔을 사용 여부
      settings:
        web-allow-others: true
  data.rest:
    base-path: /api

  jpa:
    hibernate:
      ddl-auto: update
    # 테스트 데이터 만들도록 함
    # data.sql 으로 등록할 경우 해당 sql의 데이터 초기에 등록
    defer-datasource-initialization: true
    # api 요청부터 응답까지 영속성 컨텍스트 유지
    # 커넥션을 db에 언제 돌려주는자 설정 -> 영속성 컨텍스트가 데이터베이스 커넥션 반납함
    open-in-view: false
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        # 벌크로 데이터 읽어올 수 있도록 설정 최대 100개씩 읽어올 수 있도록 설정
        default_batch_fetch_size: 100
  ## data.sql 초기화 시 읽을지 설정
  sql.init.mode: always
  data:
    rest:
      detection-strategy: annotated # 리포지토리를 api 로 지정한 항목만 노출 시킴

---

spring:
  config:
    activate:
      on-profile: testdb
#  datasource:
#    url: jdbc:h2:mem:board;mode=mysql
#    driver-class-name: org.h2.Driver
#  sql.init.mode: always
#  test.database.replace: none